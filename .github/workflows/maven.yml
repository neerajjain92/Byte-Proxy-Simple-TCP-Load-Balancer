# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Start backend servers
      run: docker-compose up -d

    - name: Wait for servers to start
      run: sleep 10

    - name: Verify backend servers are running
      run: |
        curl http://localhost:8081
        curl http://localhost:8082
        curl http://localhost:8083
    
    - name: Run Load Balancer
      run: java -jar target/Byte-Proxy-Simple-TCP-Load-Balancer-1.0-SNAPSHOT.jar &

    - name: Test load balancing
      run: |
        sleep 5
        curl http://localhost:9090
        curl http://localhost:9090
        curl http://localhost:9090

    - name:  Stop backend servers
      run: docker-compose down

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
